#!/usr/bin/env python3
"""
Send Emails to Existing Apollo.io Sequence

This script allows you to send emails to an existing Apollo.io sequence
using the OutreachExecutorAgent.
"""

import os
import sys
from dotenv import load_dotenv
from agents.outreach_executor_agent import OutreachExecutorAgent
from agents.base_agent import AgentInput

def send_to_sequence(sequence_id, messages):
    """
    Send emails to an existing Apollo.io sequence.
    
    Args:
        sequence_id: The Apollo.io sequence ID to send to
        messages: List of message dictionaries
    """
    load_dotenv()
    
    apollo_key = os.getenv('APOLLO_API_KEY')
    if not apollo_key:
        print("‚ùå Apollo API key not found in .env file")
        return False
    
    print(f"üîç Sending emails to sequence: {sequence_id}")
    print("=" * 50)
    
    # Create OutreachExecutorAgent
    agent = OutreachExecutorAgent(
        agent_id='send_to_sequence',
        instructions=f'Send outreach messages to sequence {sequence_id}',
        tools=[
            {'name': 'ApolloAPI', 'config': {'api_key': apollo_key}}
        ]
    )
    
    # Test the agent
    input_data = AgentInput(data={'messages': messages})
    result = agent.execute(input_data)
    
    print(f"üìä Results:")
    print(f"   Success: {result.success}")
    print(f"   Execution Time: {result.execution_time:.2f}s")
    
    if result.success:
        sent_status = result.data.get('sent_status', [])
        campaign_id = result.data.get('campaign_id', 'N/A')
        
        print(f"   Campaign ID: {campaign_id}")
        print(f"   Messages Sent: {len(sent_status)}")
        print()
        
        print("üìß Message Details:")
        for i, status in enumerate(sent_status, 1):
            lead_email = status.get('lead_email', 'N/A')
            success = status.get('success', False)
            message_id = status.get('message_id', 'N/A')
            service = status.get('service', 'N/A')
            
            print(f"   {i}. {lead_email}")
            print(f"      Status: {'‚úÖ Success' if success else '‚ùå Failed'}")
            print(f"      Service: {service}")
            print(f"      Sequence ID: {message_id}")
            
            if not success and status.get('error'):
                print(f"      Error: {status['error']}")
            print()
        
        return True
    else:
        print(f"‚ùå Failed: {result.error}")
        return False

def main():
    """Main function."""
    if len(sys.argv) < 2:
        print("Usage: python send_to_sequence.py <sequence_id>")
        print("Example: python send_to_sequence.py 68f48e9009062e00111792e2")
        sys.exit(1)
    
    sequence_id = sys.argv[1]
    
    # Sample messages - you can customize these
    sample_messages = [
        {
            'lead': {
                'company': 'Example Company',
                'contact_name': 'Jane Smith',
                'email': 'jane.smith@example.com',
                'role': 'CEO'
            },
            'subject': 'Partnership Opportunity - Example Company',
            'email_body': '''Hi Jane,

I hope this email finds you well. I'm reaching out from our team regarding a potential partnership opportunity with Example Company.

This email is being sent via our OutreachExecutorAgent using Apollo.io API integration.

Would you be available for a brief discussion about potential synergies?

Best regards,
AI Outreach Team

P.S. This email was generated by our automated prospect-to-lead workflow system.'''
        },
        {
            'lead': {
                'company': 'Demo Corp',
                'contact_name': 'Bob Johnson',
                'email': 'bob.johnson@democorp.com',
                'role': 'CTO'
            },
            'subject': 'Technology Integration Discussion',
            'email_body': '''Hello Bob,

I hope you're doing well. I've been following Demo Corp's innovative approach to technology solutions.

I wanted to reach out to discuss how our AI-powered prospect-to-lead workflow system might integrate with Demo Corp's existing tools.

Would you be interested in a brief technical discussion about potential synergies?

Looking forward to your response.

Best,
AI Outreach Team

P.S. This email was generated by our automated prospect-to-lead workflow system.'''
        }
    ]
    
    print(f"üöÄ Sending emails to sequence: {sequence_id}")
    print(f"üìß Messages to send: {len(sample_messages)}")
    print()
    
    success = send_to_sequence(sequence_id, sample_messages)
    
    if success:
        print("üéâ Emails sent successfully!")
        print(f"üîó View in Apollo: https://app.apollo.io/sequences/{sequence_id}")
    else:
        print("‚ùå Failed to send emails")

if __name__ == "__main__":
    main()
